// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model user {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  user_name String @db.VarChar(255)
  user_last String @db.VarChar(255)
  email     String
  password  String @db.VarChar(1000)

  cart_list        cart_list[]
  wish_list        wish_list[]
  purchase_history purchase_history[]
}

// Products Table -------------------------------------------------------
model product {
  id                Int                @id @default(autoincrement())
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @default(now()) @updatedAt
  product_name      String             @db.VarChar(255)
  product_desc      String             @db.VarChar(1000)
  sku               String             @db.VarChar(10000)
  product_price     Float              @db.Float
  product_inventory Int                @db.Int
  cart_list         cart_list[]
  wish_list         wish_list[]
  purchase_history  purchase_history[]

  category_connection category_connection[]
  discount_connection discount_connection[]

  view_product  view_product[]
  view_order    view_order[]
  view_purchase view_purchase[]

  product_point product_point[]

  model_connect  model_connect[]
  dpi_connect    dpi_connect[]
  wire_connect   wire_connect[]
  color_connect  color_connect[]
  size_connect   size_connect[]
  switch_connect switch_connect[]
  product_review product_review[]
}

// product info ------

// category
model product_category {
  id            Int    @id @default(autoincrement())
  category_name String @db.VarChar(255)
  category_desc String @db.VarChar(255)

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  category_connection category_connection[]
}

// discount
model product_discount {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  discount_name       String  @db.VarChar(255)
  discount_desc       String  @db.VarChar(255)
  discount_percentage Decimal @db.Decimal(5, 5)
  active              Boolean @db.TinyInt

  discount_connection discount_connection[]
}

model product_point {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  point String

  product_id  Int
  product_ref product @relation(fields: [product_id], references: [id])

  @@index([product_id])
}

// connection ============
model category_connection {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  product_id  Int
  product_ref product @relation(fields: [product_id], references: [id])

  category_id  Int
  category_ref product_category @relation(fields: [category_id], references: [id])

  @@index([product_id])
  @@index([category_id])
}

model discount_connection {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  product_id  Int
  product_ref product @relation(fields: [product_id], references: [id])

  discount_id  Int
  discount_ref product_discount @relation(fields: [discount_id], references: [id])

  @@index([product_id])
  @@index([discount_id])
}

// selection options table -------------------------------------------------------
// model (type)
model product_model {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  product_model    String
  product_version  Float
  product_material String

  model_sku     String
  model_connect model_connect[]
}

// dpi
model product_dpi {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  product_dpi Int

  dpi_sku     String
  dpi_connect dpi_connect[]
}

// wire
model product_wire {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  product_wire String

  wire_sku     String
  wire_connect wire_connect[]
}

// color
model product_color {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  product_color String
  product_rgb   String?

  color_sku     String
  color_connect color_connect[]
}

// size
model product_size {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  product_size String

  size_sku     String
  size_connect size_connect[]
}

// switches

model product_switch {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  product_switch String

  switch_sku     String
  switch_connect switch_connect[]
}

// selection connection tables =======================================

// model
model model_connect {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  product_id  Int
  product_ref product @relation(fields: [product_id], references: [id])

  model_id  Int
  model_ref product_model @relation(fields: [model_id], references: [id])

  @@index([product_id])
  @@index([model_id])
}

// dpi 
model dpi_connect {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  product_id  Int
  product_ref product @relation(fields: [product_id], references: [id])

  dpi_id  Int
  dpi_ref product_dpi @relation(fields: [dpi_id], references: [id])

  @@index([product_id])
  @@index([dpi_id])
}

// wire 
model wire_connect {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  product_id  Int
  product_ref product @relation(fields: [product_id], references: [id])

  wire_id  Int
  wire_ref product_wire @relation(fields: [wire_id], references: [id])

  @@index([product_id])
  @@index([wire_id])
}

// color
model color_connect {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  product_id  Int
  product_ref product @relation(fields: [product_id], references: [id])

  color_id  Int
  color_ref product_color @relation(fields: [color_id], references: [id])

  @@index([product_id])
  @@index([color_id])
}

// size
model size_connect {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  product_id  Int
  product_ref product @relation(fields: [product_id], references: [id])

  size_id  Int
  size_ref product_size @relation(fields: [size_id], references: [id])

  @@index([product_id])
  @@index([size_id])
}

// switch 
model switch_connect {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  product_id  Int
  product_ref product @relation(fields: [product_id], references: [id])

  switch_id  Int
  switch_ref product_switch @relation(fields: [switch_id], references: [id])

  @@index([product_id])
  @@index([switch_id])
}

// review tabel ------------------------------------------------------

// review 
model product_review {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  review_user String
  review_rate Int
  review_desc String

  product_id  Int
  product_ref product @relation(fields: [product_id], references: [id])

  @@index([product_id])
}

// cart tables -------------------------------------------------------
model cart_list {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())

  product_id  Int
  product_ref product @relation(fields: [product_id], references: [id])

  user_id  Int
  user_ref user @relation(fields: [user_id], references: [id])

  cart_quantity Int

  @@index([product_id])
  @@index([user_id])
}

// favorites
model wish_list {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())

  product_id  Int
  product_ref product @relation(fields: [product_id], references: [id])

  user_id  Int
  user_ref user @relation(fields: [user_id], references: [id])

  @@index([product_id])
  @@index([user_id])
}

// purchase tables -------------------------------------------------------
model purchase_history {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())

  product_id  Int
  product_ref product @relation(fields: [product_id], references: [id])

  user_id  Int
  user_ref user @relation(fields: [user_id], references: [id])

  quantity    Int
  purchase_id String @db.VarChar(10000)

  @@index([product_id])
  @@index([user_id])
}

// algorithm -------------------------------------------------------
model algorithm_info {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model view_product {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  product_int Int
  product_ref product @relation(fields: [product_int], references: [id])

  @@index([product_int])
}

model view_order {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  product_int Int
  product_ref product @relation(fields: [product_int], references: [id])

  @@index([product_int])
}

model view_purchase {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  product_int Int
  product_ref product @relation(fields: [product_int], references: [id])

  @@index([product_int])
}
